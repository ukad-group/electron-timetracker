name: publish release
on:
  push:
    # branches:
    #   - main
    #   - master
    tags:
      - v*
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Get Tag Info
        id: tag_info
        shell: bash
        run: |
          TAG_REF=$(git ls-remote origin ${GITHUB_REF} | awk '{ print $1 }')
          echo "TAG_REF = ${TAG_REF}"
          TAG_MESSAGE=$(curl -s -H "Authorization: Bearer ${GH_TOKEN}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/tags/${TAG_REF}" | jq -r '.message')

          echo "tag_message=${TAG_MESSAGE}" >> $GITHUB_OUTPUT
          echo "TAG_MESSAGE = ${TAG_MESSAGE}"

      - name: Print Tag Message
        shell: bash
        run: echo "Tag message is '${{ steps.tag_info.outputs.tag_message }}'"

      - name: Run find-and-replace to remove 'refs/tags/v'
        uses: mad9000/actions-find-and-replace-string@3
        id: findandreplace
        with:
          source: ${{ github.ref }}
          find: "refs/tags/v"
          replace: ""

      - name: Set version in package.json
        shell: bash
        if: startsWith(github.ref, 'refs/tags/v') && runner.os != 'macOS'
        run: |
          sed -i 's|"version":.*|"version":"${{ steps.findandreplace.outputs.value }}",|g' package.json
          cat package.json

      - name: Set version in package.json (macOS)
        shell: bash
        if: startsWith(github.ref, 'refs/tags/v') && runner.os == 'macOS'
        run: |
          sed -i '' 's|"version":.*|"version":"${{ steps.findandreplace.outputs.value }}",|g' package.json
          cat package.json

      - name: Set repo URL in package.json
        shell: bash
        if: startsWith(github.ref, 'refs/tags/v') && runner.os != 'macOS'
        run: |
          sed -i 's|"repository":.*|"repository":"${{ github.server_url }}/${{ github.repository }}",|g' package.json
          cat package.json

      - name: Set repo URL in package.json (macOS)
        shell: bash
        if: startsWith(github.ref, 'refs/tags/v') && runner.os == 'macOS'
        run: |
          sed -i '' 's|"repository":.*|"repository":"${{ github.server_url }}/${{ github.repository }}",|g' package.json
          cat package.json

      - run: npm install

      - name: install dmg-license
        if: runner.os == 'macOS'
        run: npm i dmg-license

      - name: 'generate ".env" file'
        if: runner.os != 'macOS'
        shell: bash
        working-directory: ./renderer
        run: |
          cp .env.demo .env
          sed -i 's|^NEXT_PUBLIC_PORT=.*|NEXT_PUBLIC_PORT=${{ secrets.NEXT_PUBLIC_PORT }}|g' .env
          sed -i 's|^NEXT_PUBLIC_TRELLO_KEY=.*|NEXT_PUBLIC_TRELLO_KEY=${{ secrets.NEXT_PUBLIC_TRELLO_KEY }}|g' .env
          sed -i 's|^NEXT_PUBLIC_GOOGLE_CLIENT_ID=.*|NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}|g' .env
          sed -i 's|^NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=.*|NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_SECRET }}|g' .env
          sed -i 's|^NEXT_PUBLIC_OFFICE365_CLIENT_ID=.*|NEXT_PUBLIC_OFFICE365_CLIENT_ID=${{ secrets.NEXT_PUBLIC_OFFICE365_CLIENT_ID }}|g' .env
          cat .env

      - name: 'generate ".env" file (MacOS)'
        if: runner.os == 'macOS'
        shell: bash
        working-directory: ./renderer
        run: |
          cp .env.demo .env
          sed -i '' 's|^NEXT_PUBLIC_PORT=.*|NEXT_PUBLIC_PORT=${{ secrets.NEXT_PUBLIC_PORT }}|g' .env
          sed -i '' 's|^NEXT_PUBLIC_TRELLO_KEY=.*|NEXT_PUBLIC_TRELLO_KEY=${{ secrets.NEXT_PUBLIC_TRELLO_KEY }}|g' .env
          sed -i '' 's|^NEXT_PUBLIC_GOOGLE_CLIENT_ID=.*|NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}|g' .env
          sed -i '' 's|^NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=.*|NEXT_PUBLIC_GOOGLE_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_SECRET }}|g' .env
          sed -i '' 's|^NEXT_PUBLIC_OFFICE365_CLIENT_ID=.*|NEXT_PUBLIC_OFFICE365_CLIENT_ID=${{ secrets.NEXT_PUBLIC_OFFICE365_CLIENT_ID }}|g' .env
          cat .env

      # - run: npm run build
      - run: npm run test
      - run: npm run dist

      - name: Publish release
        uses: softprops/action-gh-release@v1
        id: release
        if: (startsWith(github.ref, 'refs/tags/')) && (!(contains(github.ref, 'beta')))
        with:
          body: "${{ steps.tag_info.outputs.tag_message }}"
          generate_release_notes: true
          files: |
            ./dist/*.exe
            ./dist/*.dmg
            ./dist/latest.yml
            ./dist/latest-mac.yml

      - name: Publish pre-release
        uses: softprops/action-gh-release@v1
        id: pre_release
        if: (startsWith(github.ref, 'refs/tags/')) && (contains(github.ref, 'beta'))
        with:
          body: "${{ steps.tag_info.outputs.tag_message }}"
          generate_release_notes: true
          prerelease: true
          files: |
            ./dist/*.exe
            ./dist/*.dmg
            ./dist/latest.yml
            ./dist/latest-mac.yml
