name: publish release
on:
  push:
    # # Sequence of patterns matched against refs/heads
    branches:
      - main
      - master
      - feature/*
    tags:
      - v*
#   workflow_dispatch:
jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: windows-latest
    permissions:
      contents: write
    # env:
    #   GITHUB_TOKEN: ${{ github.token }}
    #   GITHUB_TOKEN: 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
    #   DEBUG: electron-builder
    # container:
    #     image: node:20.5.0
    #     # env:
    #     #   NODE_ENV: development
    #     # ports:
    #     #   - 80
    #     volumes:
    #       - ./:/app
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # need to get tag
      #   - uses: actions/setup-node@v3
      #     with:
      #       node-version: "16"
      - run: npm install
      - run: npm run build
      #      - run: npm run dist
      - run: npm run dist-win

      - run: echo "$(git describe --tags --abbrev=0)"
      - name: Get previous tag
        id: get_previous_tag
        # run: echo "::set-output name=previous_tag::$(git describe --tags --abbrev=0)"
        # run: echo "$(git describe --tags --abbrev=0)" >> "$previous_tag" # for Linux
        # run: $env:previous_tag = "$(git describe --tags --abbrev=0)" # for Windows
        # run: echo "action_state=yellow" >> $previous_tag
        run: echo "previous_tag=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"
        # run: |
        #   $env:previous_tag = "$(git describe --tags --abbrev=0)"
        #   echo "Previous tag: $env:previous_tag"
        # shell: pwsh

      #   - name: Determine new version
      #     id: determine_version
      #     # run: echo "::set-output name=version::$(npx semver -i patch ${{ steps.get_previous_tag.outputs.previous_tag }})"
      #     # run: echo "$(npx semver -i patch ${{ steps.get_previous_tag.outputs.previous_tag }})" >> "$version"
      #     # run: $env:version = "$(npx semver -i patch ${{ steps.get_previous_tag.outputs.previous_tag }})" # for Windows
      #     run: echo "version=$(npx semver -i patch ${{ steps.get_previous_tag.outputs.previous_tag }})" >> "$GITHUB_ENV"
      #   - uses: marvinpinto/action-automatic-releases@latest
      #     with:
      #       repo_token: "${{ env.GITHUB_TOKEN }}"
      #       #   automatic_release_tag: "latest"
      #       automatic_release_tag: "${{ env.previous_tag }}"
      #       #   automatic_release_tag: "${{ github.ref_name }}"
      #       prerelease: false
      #       files: |
      #         ./dist/*.exe
      #         ./json
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./dist/*.exe
            ./json
        # env:
        #   token: ${{ env.GITHUB_TOKEN }}

      #   - name: Run tmate
      #     uses: mxschmitt/action-tmate@v2

      #   - uses: actions/upload-artifact@v3
      #     with:
      #       name: my-artifact
      #       path: /home/runner/work/tt-test/tt-test/app/
    #   - uses: actions/upload-artifact@v3
    #     with:
    #       name: dist
    #       path: ./dist/*.exe
