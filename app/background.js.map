{"version":3,"file":"background.js","mappings":"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","sources":["webpack://timetracker/webpack/bootstrap","webpack://timetracker/webpack/runtime/compat get default export","webpack://timetracker/webpack/runtime/define property getters","webpack://timetracker/webpack/runtime/hasOwnProperty shorthand","webpack://timetracker/webpack/runtime/make namespace object","webpack://timetracker/external node-commonjs \"fs\"","webpack://timetracker/external node-commonjs \"electron\"","webpack://timetracker/external commonjs2 \"electron-serve\"","webpack://timetracker/external commonjs2 \"electron-updater\"","webpack://timetracker/./main/helpers/datetime.ts","webpack://timetracker/external node-commonjs \"path\"","webpack://timetracker/./main/helpers/fs.ts","webpack://timetracker/./main/background.ts","webpack://timetracker/./main/helpers/create-window.ts","webpack://timetracker/./main/helpers/parseReportsInfo.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron-serve\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron-updater\");","export function getISOWeek(date: Date): number {\r\n  const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\r\n  const daysOffset =\r\n    firstDayOfYear.getDay() === 0 ? -6 : 1 - firstDayOfYear.getDay();\r\n\r\n  const yearStart = new Date(date.getFullYear(), 0, 1 + daysOffset);\r\n  const diff = date.getTime() - yearStart.getTime();\r\n  const weekNumber = Math.floor(diff / (7 * 24 * 60 * 60 * 1000));\r\n\r\n  return weekNumber;\r\n}\r\n\r\nexport function formatTimereportDate(date: Date): string {\r\n  const year = date.getFullYear().toString();\r\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n  const day = date.getDate().toString().padStart(2, \"0\");\r\n\r\n  return `${year}${month}${day}`;\r\n}\r\n\r\nexport function getPathFromDate(date: Date, reportsFolder: string): string {\r\n  const year = date.getFullYear();\r\n  const week = getISOWeek(date).toString().padStart(2, \"0\");\r\n  const timereportDate = formatTimereportDate(date);\r\n\r\n  return `${reportsFolder}/${year}/week ${week}/timereport - ${timereportDate}`;\r\n}\r\n\r\nexport function calcDurationBetweenTimes(from: string, to: string): number {\r\n  if (from == undefined || to == undefined) {\r\n    return null;\r\n  }\r\n  const startParts = from.split(\":\");\r\n  const endParts = to.split(\":\");\r\n\r\n  const startHours = parseInt(startParts[0], 10) || 0;\r\n  const startMinutes = parseInt(startParts[1], 10) || 0;\r\n\r\n  const endHours = parseInt(endParts[0], 10) || 0;\r\n  const endMinutes = parseInt(endParts[1], 10) || 0;\r\n\r\n  const startTotalMinutes = startHours * 60 + startMinutes;\r\n  const endTotalMinutes = endHours * 60 + endMinutes;\r\n\r\n  const totalMinutes = endTotalMinutes - startTotalMinutes;\r\n\r\n  const hours = Math.round((totalMinutes / 60) * 100) / 100;\r\n\r\n  return hours;\r\n}\r\n\r\nexport function getDateFromFilename(filename: string) {\r\n  const dateString = filename.split(\" - \")[1];\r\n\r\n  if (dateString === undefined) return null;\r\n\r\n  const year = parseInt(dateString.slice(0, 4), 10);\r\n  const month = parseInt(dateString.slice(4, 6), 10) - 1;\r\n  const day = parseInt(dateString.slice(6, 8), 10);\r\n\r\n  return new Date(year, month, day);\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","import fs from \"fs\";\r\nimport path from \"path\";\r\n\r\nexport function createDirByPath(path: string) {\r\n  const parts = path.split(\"/\");\r\n  let currentPath = \"\";\r\n\r\n  parts.forEach((part) => {\r\n    currentPath += `${part}/`;\r\n    if (!fs.existsSync(currentPath)) {\r\n      fs.mkdirSync(currentPath);\r\n    }\r\n  });\r\n}\r\n\r\ntype Report = {\r\n  data: string;\r\n  reportDate: string;\r\n};\r\n\r\nexport function searchReadFiles(\r\n  directory: string,\r\n  queries: string[],\r\n  year: string\r\n) {\r\n  const initialReportsArr: Report[] = [];\r\n  const yearFolders = fs.readdirSync(directory);\r\n  const currentYearFolder = yearFolders.find(\r\n    (folderName) => folderName === year\r\n  );\r\n\r\n  if (!currentYearFolder) return [];\r\n\r\n  const currentYearPath = `${directory}/${currentYearFolder}`;\r\n\r\n  const filledReportsArr = searchFilesWithSubfolders(\r\n    currentYearPath,\r\n    queries,\r\n    initialReportsArr\r\n  );\r\n\r\n  return filledReportsArr;\r\n}\r\n\r\nfunction searchFilesWithSubfolders(\r\n  currentYearFolder: string,\r\n  queries: string[],\r\n  initialReportsArr: Report[]\r\n) {\r\n  try {\r\n    const files = fs.readdirSync(currentYearFolder);\r\n\r\n    files.forEach((file) => {\r\n      const filePath = path.join(currentYearFolder, file);\r\n      const stats = fs.statSync(filePath);\r\n\r\n      if (stats.isDirectory()) {\r\n        searchFilesWithSubfolders(filePath, queries, initialReportsArr);\r\n      } else if (queries.some((query) => file.includes(query))) {\r\n        initialReportsArr.push({\r\n          data: fs.readFileSync(filePath, \"utf8\"),\r\n          reportDate: filePath.split(\" - \")[1],\r\n        });\r\n      }\r\n    });\r\n  } catch (err) {\r\n    console.error(\"Error:\", err);\r\n  }\r\n\r\n  return initialReportsArr;\r\n}\r\n","import fs from \"fs\";\r\nimport { app, dialog, ipcMain, Menu, Tray } from \"electron\";\r\nimport serve from \"electron-serve\";\r\nimport { autoUpdater } from \"electron-updater\";\r\nimport { createWindow } from \"./helpers\";\r\nimport { getDateFromFilename, getPathFromDate } from \"./helpers/datetime\";\r\nimport { parseReportsInfo, Activity } from \"./helpers/parseReportsInfo\";\r\nimport { createDirByPath, searchReadFiles } from \"./helpers/fs\";\r\nimport path from \"path\";\r\n\r\nconst isProd: boolean = process.env.NODE_ENV === \"production\";\r\ntype Callback = (data: string | null) => void;\r\nif (isProd) {\r\n  serve({ directory: \"app\" });\r\n} else {\r\n  app.setPath(\"userData\", `${app.getPath(\"userData\")} (development)`);\r\n}\r\n\r\nautoUpdater.autoDownload = false;\r\nautoUpdater.autoInstallOnAppQuit = true;\r\nipcMain.on(\"beta-channel\", (event, isBeta: boolean) => {\r\n  autoUpdater.allowPrerelease = isBeta;\r\n});\r\nautoUpdater.allowDowngrade = true;\r\nautoUpdater.on(\"error\", (e, message) => {\r\n  mainWindow.webContents.send(\"errorMes\", e, message);\r\n});\r\nautoUpdater.on(\"update-available\", (info) => {\r\n  autoUpdater.downloadUpdate();\r\n  if (mainWindow) {\r\n    mainWindow.webContents.send(\"update-available\", true, info);\r\n  }\r\n});\r\nautoUpdater.on(\"update-downloaded\", (info) => {\r\n  if (mainWindow) {\r\n    mainWindow.webContents.send(\"downloaded\", true, info);\r\n  }\r\n});\r\nipcMain.on(\"install\", (event) => {\r\n  autoUpdater.quitAndInstall(true);\r\n});\r\n\r\nconst userDataDirectory = app.getPath(\"userData\");\r\n\r\nlet mainWindow = null;\r\n\r\nconst gotTheLock = app.requestSingleInstanceLock();\r\n\r\nconst generateWindow = () => {\r\n  mainWindow = createWindow({\r\n    width: 1000,\r\n    height: 600,\r\n    autoHideMenuBar: true,\r\n  });\r\n\r\n  if (isProd) {\r\n    mainWindow.loadURL(\"app://./home.html\");\r\n\r\n    mainWindow.on(\"close\", (event) => {\r\n      event.preventDefault();\r\n      mainWindow.hide();\r\n    });\r\n  } else {\r\n    const port = process.argv[2];\r\n    mainWindow.loadURL(`http://localhost:${port}/`);\r\n    mainWindow.webContents.openDevTools();\r\n  }\r\n  mainWindow.on(\"click\", () => {\r\n    if (isProd) {\r\n      mainWindow.show();\r\n    } else {\r\n      generateWindow();\r\n    }\r\n  });\r\n};\r\nlet tray: Tray = null;\r\n\r\nconst generateTray = () => {\r\n  const contextMenu = Menu.buildFromTemplate([\r\n    {\r\n      label: \"Activate\",\r\n      type: \"normal\",\r\n      click: () => {\r\n        if (isProd) {\r\n          mainWindow.show();\r\n        } else {\r\n          generateWindow();\r\n        }\r\n        autoUpdater.checkForUpdates();\r\n      },\r\n    },\r\n    {\r\n      label: \"Quit\",\r\n      type: \"normal\",\r\n      accelerator: \"CmdOrCtrl+Q\",\r\n      click: () => {\r\n        app.exit();\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const imagePath = path.join(__dirname, \"/images/clock-16.png\");\r\n\r\n  tray = new Tray(imagePath);\r\n  tray.setContextMenu(contextMenu);\r\n\r\n  tray.on(\"click\", () => {\r\n    if (isProd) {\r\n      mainWindow.show();\r\n    } else {\r\n      generateWindow();\r\n    }\r\n    autoUpdater.checkForUpdates();\r\n  });\r\n};\r\n\r\napp.on(\"before-quit\", () => {\r\n  tray.destroy();\r\n});\r\n\r\napp.on(\"ready\", () => {\r\n  if (!gotTheLock) {\r\n    app.quit();\r\n  } else {\r\n    app.on(\"second-instance\", (event, commandLine, workingDirectory) => {\r\n      if (mainWindow) {\r\n        if (mainWindow.isMinimized()) mainWindow.restore();\r\n        mainWindow.show();\r\n        mainWindow.focus();\r\n      }\r\n    });\r\n    generateWindow();\r\n  }\r\n\r\n  generateTray();\r\n\r\n  let currentSelectedDate = \"\";\r\n\r\n  if (mainWindow) {\r\n    ipcMain.on(\r\n      \"start-file-watcher\",\r\n      (event, reportsFolder: string, selectedDate: Date) => {\r\n        const timereportPath = getPathFromDate(selectedDate, reportsFolder);\r\n\r\n        currentSelectedDate = selectedDate.toDateString();\r\n        if (fs.existsSync(timereportPath)) {\r\n          fs.watch(timereportPath, (eventType, filename) => {\r\n            if (\r\n              eventType === \"change\" &&\r\n              currentSelectedDate === selectedDate.toDateString()\r\n            ) {\r\n              readDataFromFile(timereportPath, (data: string) => {\r\n                mainWindow && mainWindow.webContents.send(\"file-changed\", data);\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n    ipcMain.on(\r\n      \"start-folder-watcher\",\r\n      (event, reportsFolder: string, calendarDate: Date) => {\r\n        if (fs.existsSync(reportsFolder)) {\r\n          fs.watch(\r\n            reportsFolder,\r\n            { recursive: true },\r\n            (eventType, filename) => {\r\n              if (eventType === \"change\" && filename) {\r\n                const fileDate = getDateFromFilename(filename);\r\n\r\n                if (fileDate === null) return;\r\n\r\n                const monthsBetweenDates = Math.abs(\r\n                  fileDate.getMonth() - calendarDate.getMonth()\r\n                );\r\n\r\n                if (\r\n                  monthsBetweenDates > 1 ||\r\n                  fileDate.getFullYear() !== calendarDate.getFullYear()\r\n                ) {\r\n                  return;\r\n                }\r\n\r\n                mainWindow.webContents.send(\"any-file-changed\");\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n\r\n    ipcMain.on(\"start-update-watcher\", (event) => {\r\n      mainWindow &&\r\n        mainWindow.webContents.send(\"current-version\", app.getVersion());\r\n\r\n      app.whenReady().then(() => {\r\n        autoUpdater.checkForUpdates();\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n  if (process.platform !== \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\nipcMain.handle(\"storage:get\", (event, storageName: string) => {\r\n  return fs.readFileSync(`${userDataDirectory}/${storageName}`, \"utf8\");\r\n});\r\nipcMain.handle(\"storage:set\", (event, storageName: string, value: string) => {\r\n  fs.writeFileSync(`${userDataDirectory}/${storageName}`, value);\r\n});\r\nipcMain.handle(\"storage:delete\", (event, storageName: string) => {\r\n  fs.unlinkSync(`${userDataDirectory}/${storageName}`);\r\n});\r\n\r\nipcMain.handle(\"app:select-folder\", async () => {\r\n  const response = await dialog.showOpenDialog({\r\n    properties: [\"openDirectory\"],\r\n  });\r\n\r\n  if (!response.canceled) {\r\n    return response.filePaths[0];\r\n  }\r\n  return null;\r\n});\r\nconst readDataFromFile = (timereportPath: string, callback: Callback) => {\r\n  if (!fs.existsSync(timereportPath)) return callback(null);\r\n  try {\r\n    const data = fs.readFileSync(timereportPath, \"utf8\");\r\n    callback(data);\r\n  } catch (err) {\r\n    console.error(err);\r\n    callback(null);\r\n  }\r\n};\r\n\r\nipcMain.handle(\r\n  \"app:read-day-report\",\r\n  (event, reportsFolder: string, date: Date) => {\r\n    if (!reportsFolder || !date) return null;\r\n\r\n    const timereportPath = getPathFromDate(date, reportsFolder);\r\n\r\n    return new Promise((resolve) => {\r\n      readDataFromFile(timereportPath, (data) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  }\r\n);\r\n\r\nipcMain.handle(\r\n  \"app:write-day-report\",\r\n  (event, reportsFolder: string, date: Date, report: string) => {\r\n    if (!reportsFolder || !date) return null;\r\n\r\n    const timereportPath = getPathFromDate(date, reportsFolder);\r\n\r\n    try {\r\n      createDirByPath(timereportPath.slice(0, timereportPath.lastIndexOf(\"/\")));\r\n      fs.writeFileSync(timereportPath, report);\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  }\r\n);\r\n\r\nipcMain.handle(\r\n  \"app:find-latest-projects\",\r\n  (event, reportsFolder: string, date: Date) => {\r\n    if (!reportsFolder || !date) return [];\r\n\r\n    const parsedProjects = parseReportsInfo(reportsFolder, date);\r\n\r\n    const sortedProjAndAct: Record<string, string[]> = Object.keys(\r\n      parsedProjects\r\n    )\r\n      .sort()\r\n      .reduce((accumulator, key) => {\r\n        const activitySet = new Set<string>();\r\n\r\n        parsedProjects[key]?.forEach((activity: Activity) => {\r\n          if (activity.acti) {\r\n            activitySet.add(activity.acti);\r\n          }\r\n        });\r\n\r\n        accumulator[key] = Array.from(activitySet);\r\n        return accumulator;\r\n      }, {});\r\n\r\n    const descriptionsSet: Record<string, string[]> = Object.keys(\r\n      parsedProjects\r\n    ).reduce((accumulator, key) => {\r\n      const descriptionsSet = new Set<string>();\r\n\r\n      parsedProjects[key]?.forEach((activity: Activity) => {\r\n        if (activity.desc) {\r\n          descriptionsSet.add(activity.desc);\r\n        }\r\n      });\r\n\r\n      accumulator[key] = Array.from(descriptionsSet);\r\n      return accumulator;\r\n    }, {});\r\n\r\n    return { sortedProjAndAct, descriptionsSet };\r\n  }\r\n);\r\n\r\nipcMain.handle(\r\n  \"app:find-month-projects\",\r\n  (event, reportsFolder: string, date: Date) => {\r\n    if (!reportsFolder || !date) return [];\r\n\r\n    const year = date.getFullYear().toString();\r\n    const prevMonth = date.getMonth().toString().padStart(2, \"0\");\r\n    const currentMonth = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const nextMonth = (date.getMonth() + 2).toString().padStart(2, \"0\");\r\n    const queries = [year + currentMonth, year + prevMonth, year + nextMonth];\r\n\r\n    return searchReadFiles(reportsFolder, queries, year);\r\n  }\r\n);\r\n","import {\r\n  screen,\r\n  BrowserWindow,\r\n  BrowserWindowConstructorOptions,\r\n} from \"electron\";\r\n\r\nexport default (options: BrowserWindowConstructorOptions): BrowserWindow => {\r\n  let state = {};\r\n  let win;\r\n\r\n  const browserOptions: BrowserWindowConstructorOptions = {\r\n    ...state,\r\n    ...options,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n      ...options.webPreferences,\r\n    },\r\n    minWidth: 360,\r\n    minHeight: 600,\r\n  };\r\n  win = new BrowserWindow(browserOptions);\r\n\r\n  return win;\r\n};\r\n","import fs from \"fs\";\r\nimport { getPathFromDate, calcDurationBetweenTimes } from \"./datetime\";\r\nexport type Activity = {\r\n  acti: string;\r\n  desc: string;\r\n  dur: number;\r\n};\r\n\r\nexport type AllActivities = Record<string, Activity[]>;\r\n\r\nexport function parseReportsInfo(\r\n  reportsFolder: string,\r\n  date: Date\r\n): AllActivities {\r\n  const parsedProjects: AllActivities = {\r\n    internal: [],\r\n    hr: [],\r\n  };\r\n\r\n  let currentDate = new Date(date);\r\n\r\n  for (let i = 0; i < 31; i++) {\r\n    currentDate.setDate(currentDate.getDate() - 1);\r\n    const timereportPath = getPathFromDate(currentDate, reportsFolder);\r\n    const timeRegex = /^[0-9]+:[0-9]+/;\r\n    try {\r\n      const lines = fs.readFileSync(timereportPath, \"utf8\").split(\"\\n\");\r\n\r\n      for (let j = 0; j < lines.length; j++) {\r\n        if (!timeRegex.test(lines[j])) continue;\r\n        const parts = lines[j].split(\" - \");\r\n        const from = parts[0]?.trim();\r\n        const to = lines[j + 1]?.split(\" - \")[0];\r\n        const project = parts[1]?.trim();\r\n        const activity = parts[2]?.trim();\r\n        const description = parts[3]?.trim();\r\n\r\n        if (!project || project?.startsWith(\"!\")) continue;\r\n\r\n        if (!parsedProjects.hasOwnProperty(project) && parts.length === 2) {\r\n          parsedProjects[project] = [\r\n            {\r\n              acti: \"\",\r\n              desc: \"\",\r\n              dur: to ? calcDurationBetweenTimes(from, to) : 0,\r\n            },\r\n          ];\r\n          continue;\r\n        }\r\n\r\n        if (!parsedProjects.hasOwnProperty(project) && parts.length === 3) {\r\n          parsedProjects[project] = [\r\n            {\r\n              acti: \"\",\r\n              desc: activity,\r\n              dur: to ? calcDurationBetweenTimes(from, to) : 0,\r\n            },\r\n          ];\r\n          continue;\r\n        }\r\n        if (!parsedProjects.hasOwnProperty(project) && parts.length === 4) {\r\n          parsedProjects[project] = [\r\n            {\r\n              acti: activity,\r\n              desc: description,\r\n              dur: to ? calcDurationBetweenTimes(from, to) : 0,\r\n            },\r\n          ];\r\n          continue;\r\n        }\r\n        const newctivity: Activity = {\r\n          acti: \"\",\r\n          desc: \"\",\r\n          dur: to ? calcDurationBetweenTimes(from, to) : 0,\r\n        };\r\n        if (parts.length === 3) {\r\n          newctivity.desc = activity;\r\n        }\r\n\r\n        if (parts.length === 4) {\r\n          newctivity.acti = activity;\r\n          newctivity.desc = description;\r\n        }\r\n\r\n        parsedProjects[project].push(newctivity);\r\n      }\r\n    } catch (e) {\r\n      continue;\r\n    }\r\n  }\r\n\r\n  return parsedProjects;\r\n}\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","getPathFromDate","date","reportsFolder","year","getFullYear","week","firstDayOfYear","Date","daysOffset","getDay","yearStart","diff","getTime","Math","floor","getISOWeek","toString","padStart","timereportDate","month","getMonth","day","getDate","concat","formatTimereportDate","calcDurationBetweenTimes","from","to","undefined","startParts","split","endParts","startHours","parseInt","startMinutes","totalMinutes","round","searchReadFiles","directory","queries","currentYearFolder","fs","find","folderName","searchFilesWithSubfolders","initialReportsArr","forEach","file","filePath","path","isDirectory","some","query","includes","push","data","reportDate","err","console","error","_regeneratorRuntime","e","t","r","n","i","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","_asyncToGenerator","fn","self","args","arguments","apply","serve","autoUpdater","ipcMain","event","isBeta","message","mainWindow","webContents","send","userDataDirectory","app","gotTheLock","tray","destroy","contextMenu","imagePath","options","browserOptions","commandLine","workingDirectory","isMinimized","restore","show","focus","width","height","autoHideMenuBar","_objectSpread","webPreferences","nodeIntegration","contextIsolation","minWidth","minHeight","BrowserWindow","loadURL","on","preventDefault","hide","Menu","label","click","accelerator","__dirname","Tray","setContextMenu","currentSelectedDate","selectedDate","timereportPath","toDateString","eventType","filename","readDataFromFile","calendarDate","recursive","fileDate","dateString","getDateFromFilename","abs","process","platform","storageName","_callee","response","_context","dialog","properties","canceled","filePaths","callback","report","parts","currentPath","lastIndexOf","part","log","parsedProjects","internal","hr","currentDate","setDate","timeRegex","lines","j","_parts$","_lines","_parts$2","_parts$3","_parts$4","test","trim","project","activity","description","startsWith","newctivity","acti","desc","dur","parseReportsInfo","sortedProjAndAct","sort","reduce","accumulator","_parsedProjects$key","activitySet","Set","add","Array","descriptionsSet","_parsedProjects$key2","prevMonth"],"sourceRoot":""}