import { useState, useEffect } from "react";
import { shallow } from "zustand/shallow";
import { useUpdateStore } from "../store/updateStore";
import { useBetaStore } from "../store/betaUpdatesStore";
import DisclosureSection from "./ui/DisclosureSection";
import { GlobeAltIcon } from "@heroicons/react/24/solid";

type File = {
  url: string;
  sha512: string;
  size: number;
};

type Release = {
  files: File[];
  path: string;
  releaseDate: string;
  releaseName: string;
  releaseNotes: string;
  sha512: string;
  tag: string;
  version: string;
};

export default function UpdateDescription() {
  const [release, setRelease] = useState<Release | null>();
  const [currentVersion, setCurrentVersion] = useState(
    global.app?.getVersion()
  );
  const [isUpdate, setIsUpdate] = useState(false);
  const [update, setUpdate] = useUpdateStore(
    (state) => [state.update, state.setUpdate],
    shallow
  );
  const [isBeta, setIsBeta] = useBetaStore(
    (state) => [state.isBeta, state.setIsBeta],
    shallow
  );
  const [isOpen, setIsOpen] = useState(update?.age === "new");

  useEffect(() => {
    global.ipcRenderer.send("beta-channel", isBeta);
    global.ipcRenderer.send("get-current-version");

    global.ipcRenderer.on("update-available", (event, data, info) => {
      setIsUpdate(data);
    });

    global.ipcRenderer.on("downloaded", (event, data, info) => {
      setRelease(info);
      setIsOpen(true);
      setUpdate({ age: "new", description: info?.releaseNotes });
    });

    global.ipcRenderer.on("current-version", (event, data) => {
      setCurrentVersion(data);
    });

    return () => {
      global.ipcRenderer.removeAllListeners("update-available");
      global.ipcRenderer.removeAllListeners("downloaded");
      global.ipcRenderer.removeAllListeners("current-version");
    };
  }, [isBeta]);

  const isOpenToggle = () => {
    if (isOpen) {
      setIsOpen(false);
      setUpdate({ age: "old", description: update?.description });
    } else {
      setIsOpen(true);
      setUpdate({ age: "new", description: update?.description });
    }
  };

  // open autogenerated github message links in a new window
  const addTargetBlankToLink = (htmlString: string) => {
    const tempDiv = document.createElement("div");
    tempDiv.innerHTML = htmlString;

    const links = tempDiv.getElementsByTagName("a");
    for (var i = 0; i < links.length; i++) {
      links[i].target = "_blank";
    }

    return tempDiv.innerHTML;
  };

  const suppotClickHandler = (isDesktop: boolean) => {
    global.ipcRenderer.send("slack redirect", isDesktop);
  };

  return (
    <DisclosureSection
      toggleFunction={isOpenToggle}
      isOpen={isOpen}
      title="What's new?"
    >
      <p className="text-xs text-gray-700 font-semibold dark:text-dark-main">
        Current version {currentVersion} {!isUpdate && "(latest)"}
      </p>

      <div className="flex flex-col my-5 gap-3 ">
        <p className=" text-gray-700 font-semibold dark:text-dark-main">
          You can leave your feedback or questions in our slack channel
        </p>
        <button
          className="flex gap-2 text-blue-700 font-semibold hover:text-blue-800 dark:text-blue-700/70 dark:hover:text-blue-700"
          onClick={() => suppotClickHandler(true)}
        >
          <svg
            fill="#4b5563"
            width="24px"
            height="24px"
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <title>ionicons-v5_logos</title>
            <path d="M126.12,315.1A47.06,47.06,0,1,1,79.06,268h47.06Z" />
            <path d="M149.84,315.1a47.06,47.06,0,0,1,94.12,0V432.94a47.06,47.06,0,1,1-94.12,0Z" />
            <path d="M196.9,126.12A47.06,47.06,0,1,1,244,79.06v47.06Z" />
            <path d="M196.9,149.84a47.06,47.06,0,0,1,0,94.12H79.06a47.06,47.06,0,0,1,0-94.12Z" />
            <path d="M385.88,196.9A47.06,47.06,0,1,1,432.94,244H385.88Z" />
            <path d="M362.16,196.9a47.06,47.06,0,0,1-94.12,0V79.06a47.06,47.06,0,1,1,94.12,0Z" />
            <path d="M315.1,385.88A47.06,47.06,0,1,1,268,432.94V385.88Z" />
            <path d="M315.1,362.16a47.06,47.06,0,0,1,0-94.12H432.94a47.06,47.06,0,1,1,0,94.12Z" />
          </svg>
          Open in desktop Slack
        </button>
        <button
          className="flex gap-2 text-blue-700 font-semibold hover:text-blue-800 dark:text-blue-700/70 dark:hover:text-blue-700"
          onClick={() => suppotClickHandler(false)}
        >
          <GlobeAltIcon className="w-6 h-6 fill-gray-600" />
          Open Slack in the browser
        </button>
      </div>
      <h2 className="font-bold text-gray-700 dark:text-dark-heading">
        In {release?.version ? release?.version : currentVersion} version
      </h2>
      {update?.description ? (
        <div
          className="desc flex flex-col gap-2 mb-3 dark:text-dark-heading"
          dangerouslySetInnerHTML={{
            __html: addTargetBlankToLink(update?.description),
          }}
        ></div>
      ) : (
        <div className="flex flex-col gap-2 mb-3 dark:text-dark-heading">
          Here you will receive notifications about the app's content updates
          after downloading the new version.
        </div>
      )}
    </DisclosureSection>
  );
}
